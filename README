# üîÆ Project  Validate  NodeJS

Objetivo do projeto √© estudar como funciona as  valida√ß√µes atrav√©s de um formul√°rio. 

#### Tecnologias usadas:

- Body Parser :

  ```powershell
  npm install body-parser --save
  ```

- Express Flash: 

  ```powershell
  npm install express-flash --save 
  ```

- Express Session: 

  ```powershell
  npm install express-session --save
  ```

- Express: 

  ```powershell
  npm install express --save 
  ```

- EJS:

  ```powershell
  npm install ejs --save
  ```



## üíª Tipos  de  Valida√ß√µes

Existem dois tipos de valida√ß√µes: 

- Valida√ß√µes do lado do cliente 
  No lado do cliente as valida√ß√µes s√£o feitas atrav√©s dos campos do HTML , contudo esta t√©cnica n√£o oferece seguran√ßa, pois o usu√°rio pode remover o atributo *"required"* e enviar os dados sem nenhum problema.
  C√≥digo de exemplo:

  ```html
  <input type="email" name="email" id="email" placeholder="email" required><br>
  ```

  

- Valida√ß√µes do lado do servidor
  S√£o valida√ß√µes realizadas no back end, ou seja, no pr√≥prio servidor sem o acesso do cliente. 
  C√≥digo de exemplo:

  ```js
  if (email == undefined || email == "") {
      emailError = "E-mail inv√°lido";
    }
  
    if (pontos == undefined || pontos < 20) {
      pontosError = "Voc√™ n√£o pode ter menos de 20 pontos";
    }
  
    if (nome == undefined || nome == "") {
      nomeError = "O nome n√£o pode ser vazio";
    }
    if (emailError != undefined ||
      pontosError != undefined ||
      nomeError != undefined) {
      response.send("Valida√ß√£o dos dados incorretos");
    } else {
      response.send("Valida√ß√£o realizada com sucesso");
    }
  ```

  

Cada aplica√ß√£o determina qual tipo de valida√ß√£o ser√° realizado, neste caso, as regras de neg√≥cio ir√£o se aplicar ao que a aplica√ß√£o precisa para o seu pleno funcionamento.